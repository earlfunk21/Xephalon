{"lang":"JavascriptES5","category":"","fullPath":"","title":"14 Program14.1 Directive Prologues and the Use\n        Strict Directive","markdown":"# [14](#sec-14 \"link to this section\") Program\n\n## Syntax\n\nProgram :\n\nSourceElementsopt\n\nSourceElements :\n\nSourceElement\n\nSourceElements SourceElement\n\nSourceElement :\n\nStatement\n\nFunctionDeclaration\n\n## Semantics\n\nThe production Program : SourceElementsopt is evaluated as follows:\n\n1. The code of this _Program_ is [strict mode code](#sec-10.1.1) if the [Directive Prologue](#sec-14.1) ([14.1](#sec-14.1)) of its _SourceElements_ contains a [Use Strict Directive](#sec-14.1) or if any of the conditions of [10.1.1](#sec-10.1.1) apply. If the code of this _Program_ is[strict mode code](#sec-10.1.1), _SourceElements_ is evaluated in the following steps as [strict mode code](#sec-10.1.1). Otherwise _SourceElements_ is evaluated in the following steps as non-[strict mode code](#sec-10.1.1).\n2. If _SourceElements_ is not present, return (normal, empty, empty).\n3. Let _progCxt_ be a new execution context for global code as described in [10.4.1](#sec-10.4.1).\n4. Let _result_ be the result of evaluating _SourceElements_.\n5. Exit the execution context _progCxt_.\n6. Return _result_.\n\nNOTE The processes for initiating the evaluation of a Program and for dealing with the result of such an evaluation are defined by an ECMAScript implementation and not by this specification.\n\nThe production SourceElements : SourceElements SourceElement is evaluated as follows:\n\n1. Let _headResult_ be the result of evaluating _SourceElements_.\n2. If _headResult_ is an [abrupt completion](#sec-8.9), return _headResult._\n3. Let _tailResult_ be result of evaluating _SourceElement_.\n4. If _tailResult_.value is empty, let _V_ \\= _headResult_.value, otherwise let _V_ \\= _tailResult_.value.\n5. Return (tailResult.type, V, tailResult.target)\n\nThe production SourceElement : Statement is evaluated as follows:\n\n1. Return the result of evaluating _Statement_.\n\nThe production SourceElement : FunctionDeclaration is evaluated as follows:\n\n1. Return (normal, empty, empty).\n\n# [14.1](#sec-14.1 \"link to this section\") Directive Prologues and the Use Strict Directive\n\nA Directive Prologue is the longest sequence of ExpressionStatement productions occurring as the initial SourceElement productions of a Program or FunctionBody and where each ExpressionStatement in the sequence consists entirely of a StringLiteral token followed a semicolon. The semicolon may appear explicitly or may be inserted by [automatic semicolon insertion](#sec-7.9). A Directive Prologue may be an empty sequence.\n\nA Use Strict Directive is an ExpressionStatement in a Directive Prologue whose StringLiteral is either the exact character sequences `\"use` `strict\"` or`'use` `strict'`. A Use Strict Directive may not contain an EscapeSequence or LineContinuation.\n\nA Directive Prologue may contain more than one Use Strict Directive. However, an implementation may issue a warning if this occurs.\n\nNOTE The ExpressionStatement productions of a Directive Prologue are evaluated normally during evaluation of the containing SourceElements production. Implementations may define implementation specific meanings for ExpressionStatement productions which are not a Use Strict Directive and which occur in a Directive Prologue. If an appropriate notification mechanism exists, an implementation should issue a warning if it encounters in a Directive Prologue an ExpressionStatement that is not a Use Strict Directive or which does not have a meaning defined by the implementation."}