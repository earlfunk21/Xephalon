{"lang":"Javascript","fullPath":"/Global_Objects/Math","category":"Global_Objects","title":"Math","url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math","markdown":"# Math\n\nThe **`Math`** namespace object contains static properties and methods for mathematical constants and functions.\n\n`Math` works with the [Number](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Number) type. It doesn't work with [BigInt](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/BigInt).\n\n## [Description](#description)\n\nUnlike most global objects, `Math` is not a constructor. You cannot use it with the [new operator](/en-US/docs/Web/JavaScript/Reference/Operators/new) or invoke the `Atomics` object as a function. All properties and methods of `Math` are static.\n\n**Note:** Many `Math` functions have a precision that's _implementation-dependent_.\n\nThis means that different browsers can give a different result. Even the same JavaScript engine on a different OS or architecture can give different results!\n\n## [Static properties](#static%5Fproperties)\n\n[Math.E](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/E)\n\nEuler's number and the base of natural logarithms; approximately `2.718`.\n\n[Math.LN10](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/LN10)\n\nNatural logarithm of `10`; approximately `2.303`.\n\n[Math.LN2](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/LN2)\n\nNatural logarithm of `2`; approximately `0.693`.\n\n[Math.LOG10E](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/LOG10E)\n\nBase-10 logarithm of `E`; approximately `0.434`.\n\n[Math.LOG2E](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/LOG2E)\n\nBase-2 logarithm of `E`; approximately `1.443`.\n\n[Math.PI](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/PI)\n\nRatio of a circle's circumference to its diameter; approximately `3.14159`.\n\n[Math.SQRT1\\_2](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/SQRT1%5F2)\n\nSquare root of ½; approximately `0.707`.\n\n[Math.SQRT2](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/SQRT2)\n\nSquare root of `2`; approximately `1.414`.\n\n`Math[@@toStringTag]`\n\nThe initial value of the [@@toStringTag](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Symbol/toStringTag) property is the string `\"Math\"`. This property is used in [Object.prototype.toString()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Object/toString).\n\n## [Static methods](#static%5Fmethods)\n\n[Math.abs()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/abs)\n\nReturns the absolute value of `x`.\n\n[Math.acos()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/acos)\n\nReturns the arccosine of `x`.\n\n[Math.acosh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/acosh)\n\nReturns the hyperbolic arccosine of `x`.\n\n[Math.asin()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/asin)\n\nReturns the arcsine of `x`.\n\n[Math.asinh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/asinh)\n\nReturns the hyperbolic arcsine of a number.\n\n[Math.atan()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/atan)\n\nReturns the arctangent of `x`.\n\n[Math.atan2()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/atan2)\n\nReturns the arctangent of the quotient of its arguments.\n\n[Math.atanh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/atanh)\n\nReturns the hyperbolic arctangent of `x`.\n\n[Math.cbrt()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/cbrt)\n\nReturns the cube root of `x`.\n\n[Math.ceil()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/ceil)\n\nReturns the smallest integer greater than or equal to `x`.\n\n[Math.clz32()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/clz32)\n\nReturns the number of leading zero bits of the 32-bit integer `x`.\n\n[Math.cos()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/cos)\n\nReturns the cosine of `x`.\n\n[Math.cosh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/cosh)\n\nReturns the hyperbolic cosine of `x`.\n\n[Math.exp()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/exp)\n\nReturns ex, where x is the argument, and e is Euler's number (`2.718`…, the base of the natural logarithm).\n\n[Math.expm1()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/expm1)\n\nReturns subtracting `1` from `exp(x)`.\n\n[Math.floor()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/floor)\n\nReturns the largest integer less than or equal to `x`.\n\n[Math.fround()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/fround)\n\nReturns the nearest [single precision](https://en.wikipedia.org/wiki/Single-precision%5Ffloating-point%5Fformat) float representation of `x`.\n\n[Math.hypot()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/hypot)\n\nReturns the square root of the sum of squares of its arguments.\n\n[Math.imul()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/imul)\n\nReturns the result of the 32-bit integer multiplication of `x` and `y`.\n\n[Math.log()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/log)\n\nReturns the natural logarithm (㏒e; also, ㏑) of `x`.\n\n[Math.log10()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/log10)\n\nReturns the base-10 logarithm of `x`.\n\n[Math.log1p()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/log1p)\n\nReturns the natural logarithm (㏒e; also ㏑) of `1 + x` for the number `x`.\n\n[Math.log2()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/log2)\n\nReturns the base-2 logarithm of `x`.\n\n[Math.max()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/max)\n\nReturns the largest of zero or more numbers.\n\n[Math.min()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/min)\n\nReturns the smallest of zero or more numbers.\n\n[Math.pow()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/pow)\n\nReturns base `x` to the exponent power `y` (that is, `x` `y`).\n\n[Math.random()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/random)\n\nReturns a pseudo-random number between `0` and `1`.\n\n[Math.round()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/round)\n\nReturns the value of the number `x` rounded to the nearest integer.\n\n[Math.sign()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/sign)\n\nReturns the sign of the `x`, indicating whether `x` is positive, negative, or zero.\n\n[Math.sin()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/sin)\n\nReturns the sine of `x`.\n\n[Math.sinh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/sinh)\n\nReturns the hyperbolic sine of `x`.\n\n[Math.sqrt()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/sqrt)\n\nReturns the positive square root of `x`.\n\n[Math.tan()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/tan)\n\nReturns the tangent of `x`.\n\n[Math.tanh()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/tanh)\n\nReturns the hyperbolic tangent of `x`.\n\n[Math.trunc()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/trunc)\n\nReturns the integer portion of `x`, removing any fractional digits.\n\n## [Examples](#examples)\n\n### [Converting between degrees and radians](#converting%5Fbetween%5Fdegrees%5Fand%5Fradians)\n\nThe trigonometric functions `sin()`, `cos()`, `tan()`, `asin()`, `acos()`, `atan()`, and `atan2()` expect (and return) angles in _radians_.\n\nSince humans tend to think in degrees, and some functions (such as CSS transforms) can accept degrees, it is a good idea to keep functions handy that convert between the two:\n\n```\nfunction degToRad(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nfunction radToDeg(rad) {\n  return rad / (Math.PI / 180);\n}\n\n```\n\n### [Calculating the height of an equilateral triangle](#calculating%5Fthe%5Fheight%5Fof%5Fan%5Fequilateral%5Ftriangle)\n\nIf we want to calculate the height of an equilateral triangle, and we know its side length is 100, we can use the formulae _length of the adjacent multiplied by the tangent of the angle is equal to the opposite._\n\n![An equilateral triangle where a perpendicular of one edge is drawn from the opposite vertex, forming a right triangle with three sides marked as \"adjacent\", \"opposite\", and \"hypotenuse\". The angle between the \"adjacent\" and \"hypotenuse\" sides is 60 degrees.](/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trigonometry.png) \n\nIn JavaScript, we can do this with the following:\n\n```\n50 * Math.tan(degToRad(60));\n\n```\n\nWe use our `degToRad()` function to convert 60 degrees to radians, as [Math.tan()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/tan) expects an input value in radians.\n\n### [Returning a random integer between two bounds](#returning%5Fa%5Frandom%5Finteger%5Fbetween%5Ftwo%5Fbounds)\n\nThis can be achieved with a combination of [Math.random()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/random) and [Math.floor()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/floor):\n\n```\nfunction random(min, max) {\n  const num = Math.floor(Math.random() * (max - min + 1)) + min;\n  return num;\n}\n\nrandom(1, 10);\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                     |\n| --------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-math-object](https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-math-object) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Number](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Number)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/global%5Fobjects/math/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FMath&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fmath%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FMath%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fmath%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F0891bd2199fabb1ec00dfe4765019d54f21d965c%0A%2A+Document+last+modified%3A+2023-04-26T02%3A09%3A38.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global%5Fobjects/math/index.md?plain=1 \"Folder: en-us/web/javascript/reference/global_objects/math (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 26, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/contributors.txt)."}