{"lang":"Javascript","fullPath":"/Global_Objects/AsyncIterator","category":"Global_Objects","title":"AsyncIterator","url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncIterator","markdown":"# AsyncIterator\n\nAn **`AsyncIterator`** object is an object that conforms to the [async iterator protocol](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fasync%5Fiterator%5Fand%5Fasync%5Fiterable%5Fprotocols) by providing a `next()` method that returns a promise fulfilling to an iterator result object. The `AsyncIterator.prototype` object is a hidden global object that all built-in async iterators inherit from. It provides an [@@asyncIterator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/AsyncIterator/@@asyncIterator) method that returns the async iterator object itself, making the async iterator also [async iterable](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fasync%5Fiterator%5Fand%5Fasync%5Fiterable%5Fprotocols).\n\nNote that `AsyncIterator` is _not_ a global object, although it will be in the future with the [async iterator helpers proposal](https://github.com/tc39/proposal-async-iterator-helpers). The `AsyncIterator.prototype` object shared by all built-in async iterators can be obtained with the following code:\n\n```\nconst AsyncIteratorPrototype = Object.getPrototypeOf(\n  Object.getPrototypeOf(Object.getPrototypeOf((async function* () {})())),\n);\n\n```\n\n## [Description](#description)\n\nCurrently, the only built-in JavaScript async iterator is the [AsyncGenerator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/AsyncGenerator) object returned by [async generator functions](/en-US/docs/Web/JavaScript/Reference/Statements/async%5Ffunction%2A). There are some other built-in async iterators in web API, such as the one of a [ReadableStream](/en-US/docs/Web/API/ReadableStream).\n\nEach of these async iterators have a distinct prototype object, which defines the `next()` method used by the particular async iterator. All of these prototype objects inherit from `AsyncIterator.prototype`, which provides am [@@asyncIterator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Symbol/asyncIterator) method that returns the async iterator object itself, making the async iterator also [async iterable](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fasync%5Fiterator%5Fand%5Fasync%5Fiterable%5Fprotocols).\n\n**Note:** `AsyncIterator.prototype` does not implement [@@iterator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Symbol/iterator), so async iterators are not [sync iterable](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fiterable%5Fprotocol) by default.\n\n## [Instance methods](#instance%5Fmethods)\n\n[AsyncIterator.prototype\\[@@asyncIterator\\]()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/AsyncIterator/@@asyncIterator)\n\nReturns the async iterator object itself. This allows async iterator objects to also be async iterable.\n\n## [Examples](#examples)\n\n### [Using an async iterator as an async iterable](#using%5Fan%5Fasync%5Fiterator%5Fas%5Fan%5Fasync%5Fiterable)\n\nAll built-in async iterators are also async iterable, so you can use them in a `for await...of` loop:\n\n```\nconst asyncIterator = (async function* () {\n  yield 1;\n  yield 2;\n  yield 3;\n})();\n(async () => {\n  for await (const value of asyncIterator) {\n    console.log(value);\n  }\n})();\n// Logs: 1, 2, 3\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                     |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-asynciteratorprototype](https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-asynciteratorprototype) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [async function\\*](/en-US/docs/Web/JavaScript/Reference/Statements/async%5Ffunction%2A)\n* [The Iterator protocol](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/global%5Fobjects/asynciterator/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FAsyncIterator&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fasynciterator%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FAsyncIterator%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fasynciterator%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fab97df6ce8865569507bcfc884206a1ed297a690%0A%2A+Document+last+modified%3A+2023-04-04T07%3A30%3A34.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global%5Fobjects/asynciterator/index.md?plain=1 \"Folder: en-us/web/javascript/reference/global_objects/asynciterator (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 4, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/AsyncIterator/contributors.txt)."}