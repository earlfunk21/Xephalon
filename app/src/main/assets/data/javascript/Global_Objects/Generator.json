{"lang":"Javascript","fullPath":"/Global_Objects/Generator","category":"Global_Objects","title":"Generator","url":"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator","markdown":"# Generator\n\nThe **`Generator`** object is returned by a [generator function](/en-US/docs/Web/JavaScript/Reference/Statements/function%2A) and it conforms to both the [iterable protocol](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fiterable%5Fprotocol) and the [iterator protocol](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols#the%5Fiterator%5Fprotocol).\n\n`Generator` is a subclass of the hidden [Iterator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Iterator) class.\n\n## [Try it](#try%5Fit)\n\n## [Constructor](#constructor)\n\nThe `Generator` constructor is not available globally. Instances of `Generator` must be returned from [generator functions](/en-US/docs/Web/JavaScript/Reference/Statements/function%2A):\n\n```\nfunction* generator() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nconst gen = generator(); // \"Generator { }\"\n\nconsole.log(gen.next().value); // 1\nconsole.log(gen.next().value); // 2\nconsole.log(gen.next().value); // 3\n\n```\n\nIn fact, there's no JavaScript entity that corresponds to the `Generator` constructor. There's only a hidden object which is the prototype object shared by all objects created by generator functions. This object is often stylized as `Generator.prototype` to make it look like a class, but it should be more appropriately called [GeneratorFunction.prototype.prototype](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/GeneratorFunction), because `GeneratorFunction` is an actual JavaScript entity.\n\n## [Instance properties](#instance%5Fproperties)\n\nThese properties are defined on `Generator.prototype` and shared by all `Generator` instances.\n\n[Generator.prototype.constructor](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Object/constructor)\n\nThe constructor function that created the instance object. For `Generator` instances, the initial value is [GeneratorFunction.prototype](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/GeneratorFunction).\n\n**Note:** `Generator` objects do not store a reference to the generator function that created them.\n\n`Generator.prototype[@@toStringTag]`\n\nThe initial value of the [@@toStringTag](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Symbol/toStringTag) property is the string `\"Generator\"`. This property is used in [Object.prototype.toString()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Object/toString).\n\n## [Instance methods](#instance%5Fmethods)\n\n_Also inherits instance methods from its parent [Iterator](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Iterator)_.\n\n[Generator.prototype.next()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Generator/next)\n\nReturns a value yielded by the [yield](/en-US/docs/Web/JavaScript/Reference/Operators/yield) expression.\n\n[Generator.prototype.return()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Generator/return)\n\nActs as if a `return` statement is inserted in the generator's body at the current suspended position, which finishes the generator and allows the generator to perform any cleanup tasks when combined with a [try...finally](/en-US/docs/Web/JavaScript/Reference/Statements/try...catch#the%5Ffinally-block) block.\n\n[Generator.prototype.throw()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Generator/throw)\n\nActs as if a `throw` statement is inserted in the generator's body at the current suspended position, which informs the generator of an error condition and allows it to handle the error, or perform cleanup and close itself.\n\n## [Examples](#examples)\n\n### [An infinite iterator](#an%5Finfinite%5Fiterator)\n\nWith a generator function, values are not evaluated until they are needed. Therefore a generator allows us to define a potentially infinite data structure.\n\n```\nfunction* infinite() {\n  let index = 0;\n\n  while (true) {\n    yield index++;\n  }\n}\n\nconst generator = infinite(); // \"Generator { }\"\n\nconsole.log(generator.next().value); // 0\nconsole.log(generator.next().value); // 1\nconsole.log(generator.next().value); // 2\n// â€¦\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                           |\n| ------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-generator-objects](https://tc39.es/ecma262/multipage/control-abstraction-objects.html#sec-generator-objects) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [function\\*](/en-US/docs/Web/JavaScript/Reference/Statements/function%2A)\n* [function\\* expression](/en-US/docs/Web/JavaScript/Reference/Operators/function%2A)\n* [GeneratorFunction](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/GeneratorFunction)\n* [The Iterator protocol](/en-US/docs/Web/JavaScript/Reference/Iteration%5Fprotocols)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/global%5Fobjects/generator/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FGenerator&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fgenerator%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal%5FObjects%2FGenerator%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Fglobal%5Fobjects%2Fgenerator%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F01bf58c144237c1fc75cf7135491346778591f09%0A%2A+Document+last+modified%3A+2023-04-08T17%3A33%3A52.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/global%5Fobjects/generator/index.md?plain=1 \"Folder: en-us/web/javascript/reference/global_objects/generator (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 8, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Generator/contributors.txt)."}