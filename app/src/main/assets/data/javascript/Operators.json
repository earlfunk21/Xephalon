{"lang":"Javascript","fullPath":"/Operators","category":"","title":"Operators","url":"/en-US/docs/Web/JavaScript/Reference/Operators","markdown":"# Expressions and operators\n\nThis chapter documents all the JavaScript language operators, expressions and keywords.\n\n## [Expressions and operators by category](#expressions%5Fand%5Foperators%5Fby%5Fcategory)\n\nFor an alphabetical listing see the sidebar on the left.\n\n### [Primary expressions](#primary%5Fexpressions)\n\nBasic keywords and general expressions in JavaScript. These expressions have the highest precedence (higher than [operators](/en-US/docs/Web/JavaScript/Reference/Operators/Operator%5Fprecedence)).\n\n[this](/en-US/docs/Web/JavaScript/Reference/Operators/this)\n\nThe `this` keyword refers to a special property of an execution context.\n\n[Literals](/en-US/docs/Web/JavaScript/Reference/Lexical%5Fgrammar#literals)\n\nBasic `null`, boolean, number, and string literals.\n\n[\\[\\]](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Array)\n\nArray initializer/literal syntax.\n\n[{}](/en-US/docs/Web/JavaScript/Reference/Operators/Object%5Finitializer)\n\nObject initializer/literal syntax.\n\n[function](/en-US/docs/Web/JavaScript/Reference/Operators/function)\n\nThe `function` keyword defines a function expression.\n\n[class](/en-US/docs/Web/JavaScript/Reference/Operators/class)\n\nThe `class` keyword defines a class expression.\n\n[function\\*](/en-US/docs/Web/JavaScript/Reference/Operators/function%2A)\n\nThe `function*` keyword defines a generator function expression.\n\n[async function](/en-US/docs/Web/JavaScript/Reference/Operators/async%5Ffunction)\n\nThe `async function` defines an async function expression.\n\n[async function\\*](/en-US/docs/Web/JavaScript/Reference/Operators/async%5Ffunction%2A)\n\nThe `async function*` keywords define an async generator function expression.\n\n[/ab+c/i](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/RegExp)\n\nRegular expression literal syntax.\n\n[\\`string\\`](/en-US/docs/Web/JavaScript/Reference/Template%5Fliterals)\n\nTemplate literal syntax.\n\n[( )](/en-US/docs/Web/JavaScript/Reference/Operators/Grouping)\n\nGrouping operator.\n\n### [Left-hand-side expressions](#left-hand-side%5Fexpressions)\n\nLeft values are the destination of an assignment.\n\n[Property accessors](/en-US/docs/Web/JavaScript/Reference/Operators/Property%5Faccessors)\n\nMember operators provide access to a property or method of an object (`object.property` and `object[\"property\"]`).\n\n[?.](/en-US/docs/Web/JavaScript/Reference/Operators/Optional%5Fchaining)\n\nThe optional chaining operator returns `undefined` instead of causing an error if a reference is [nullish](/en-US/docs/Glossary/Nullish) ([null](/en-US/docs/Web/JavaScript/Reference/Operators/null) or [undefined](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/undefined)).\n\n[new](/en-US/docs/Web/JavaScript/Reference/Operators/new)\n\nThe `new` operator creates an instance of a constructor.\n\n[new.target](/en-US/docs/Web/JavaScript/Reference/Operators/new.target)\n\nIn constructors, `new.target` refers to the constructor that was invoked by [new](/en-US/docs/Web/JavaScript/Reference/Operators/new).\n\n[import.meta](/en-US/docs/Web/JavaScript/Reference/Operators/import.meta)\n\nAn object exposing context-specific metadata to a JavaScript module.\n\n[super](/en-US/docs/Web/JavaScript/Reference/Operators/super)\n\nThe `super` keyword calls the parent constructor or allows accessing properties of the parent object.\n\n[import()](/en-US/docs/Web/JavaScript/Reference/Operators/import)\n\nThe `import()` syntax allows loading a module asynchronously and dynamically into a potentially non-module environment.\n\n### [Increment and decrement](#increment%5Fand%5Fdecrement)\n\nPostfix/prefix increment and postfix/prefix decrement operators.\n\n[A++](/en-US/docs/Web/JavaScript/Reference/Operators/Increment)\n\nPostfix increment operator.\n\n[A--](/en-US/docs/Web/JavaScript/Reference/Operators/Decrement)\n\nPostfix decrement operator.\n\n[++A](/en-US/docs/Web/JavaScript/Reference/Operators/Increment)\n\nPrefix increment operator.\n\n[\\--A](/en-US/docs/Web/JavaScript/Reference/Operators/Decrement)\n\nPrefix decrement operator.\n\n### [Unary operators](#unary%5Foperators)\n\nA unary operation is an operation with only one operand.\n\n[delete](/en-US/docs/Web/JavaScript/Reference/Operators/delete)\n\nThe `delete` operator deletes a property from an object.\n\n[void](/en-US/docs/Web/JavaScript/Reference/Operators/void)\n\nThe `void` operator evaluates an expression and discards its return value.\n\n[typeof](/en-US/docs/Web/JavaScript/Reference/Operators/typeof)\n\nThe `typeof` operator determines the type of a given object.\n\n[+](/en-US/docs/Web/JavaScript/Reference/Operators/Unary%5Fplus)\n\nThe unary plus operator converts its operand to Number type.\n\n[\\-](/en-US/docs/Web/JavaScript/Reference/Operators/Unary%5Fnegation)\n\nThe unary negation operator converts its operand to Number type and then negates it.\n\n[\\~](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FNOT)\n\nBitwise NOT operator.\n\n[!](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FNOT)\n\nLogical NOT operator.\n\n[await](/en-US/docs/Web/JavaScript/Reference/Operators/await)\n\nPause and resume an async function and wait for the promise's fulfillment/rejection.\n\n### [Arithmetic operators](#arithmetic%5Foperators)\n\nArithmetic operators take numerical values (either literals or variables) as their operands and return a single numerical value.\n\n[\\*\\*](/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation)\n\nExponentiation operator.\n\n[\\*](/en-US/docs/Web/JavaScript/Reference/Operators/Multiplication)\n\nMultiplication operator.\n\n[/](/en-US/docs/Web/JavaScript/Reference/Operators/Division)\n\nDivision operator.\n\n[%](/en-US/docs/Web/JavaScript/Reference/Operators/Remainder)\n\nRemainder operator.\n\n[+](/en-US/docs/Web/JavaScript/Reference/Operators/Addition) (Plus)\n\nAddition operator.\n\n[\\-](/en-US/docs/Web/JavaScript/Reference/Operators/Subtraction)\n\nSubtraction operator.\n\n### [Relational operators](#relational%5Foperators)\n\nA comparison operator compares its operands and returns a boolean value based on whether the comparison is true.\n\n[<](/en-US/docs/Web/JavaScript/Reference/Operators/Less%5Fthan) (Less than)\n\nLess than operator.\n\n[\\>](/en-US/docs/Web/JavaScript/Reference/Operators/Greater%5Fthan) (Greater than)\n\nGreater than operator.\n\n[<=](/en-US/docs/Web/JavaScript/Reference/Operators/Less%5Fthan%5For%5Fequal)\n\nLess than or equal operator.\n\n[\\>=](/en-US/docs/Web/JavaScript/Reference/Operators/Greater%5Fthan%5For%5Fequal)\n\nGreater than or equal operator.\n\n[instanceof](/en-US/docs/Web/JavaScript/Reference/Operators/instanceof)\n\nThe `instanceof` operator determines whether an object is an instance of another object.\n\n[in](/en-US/docs/Web/JavaScript/Reference/Operators/in)\n\nThe `in` operator determines whether an object has a given property.\n\n**Note:** `=>` is not an operator, but the notation for [Arrow functions](/en-US/docs/Web/JavaScript/Reference/Functions/Arrow%5Ffunctions).\n\n### [Equality operators](#equality%5Foperators)\n\nThe result of evaluating an equality operator is always of type boolean based on whether the comparison is true.\n\n[\\==](/en-US/docs/Web/JavaScript/Reference/Operators/Equality)\n\nEquality operator.\n\n[!=](/en-US/docs/Web/JavaScript/Reference/Operators/Inequality)\n\nInequality operator.\n\n[\\===](/en-US/docs/Web/JavaScript/Reference/Operators/Strict%5Fequality)\n\nStrict equality operator.\n\n[!==](/en-US/docs/Web/JavaScript/Reference/Operators/Strict%5Finequality)\n\nStrict inequality operator.\n\n### [Bitwise shift operators](#bitwise%5Fshift%5Foperators)\n\nOperations to shift all bits of the operand.\n\n[<<](/en-US/docs/Web/JavaScript/Reference/Operators/Left%5Fshift)\n\nBitwise left shift operator.\n\n[\\>>](/en-US/docs/Web/JavaScript/Reference/Operators/Right%5Fshift)\n\nBitwise right shift operator.\n\n[\\>>>](/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned%5Fright%5Fshift)\n\nBitwise unsigned right shift operator.\n\n### [Binary bitwise operators](#binary%5Fbitwise%5Foperators)\n\nBitwise operators treat their operands as a set of 32 bits (zeros and ones) and return standard JavaScript numerical values.\n\n[&](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FAND)\n\nBitwise AND.\n\n[|](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FOR)\n\nBitwise OR.\n\n[^](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FXOR)\n\nBitwise XOR.\n\n### [Binary logical operators](#binary%5Flogical%5Foperators)\n\nLogical operators implement boolean (logical) values and have [short-circuiting](/en-US/docs/Web/JavaScript/Reference/Operators/Operator%5Fprecedence#short-circuiting) behavior.\n\n[&&](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FAND)\n\nLogical AND.\n\n[||](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FOR)\n\nLogical OR.\n\n[??](/en-US/docs/Web/JavaScript/Reference/Operators/Nullish%5Fcoalescing)\n\nNullish Coalescing Operator.\n\n### [Conditional (ternary) operator](#conditional%5Fternary%5Foperator)\n\n[(condition ? ifTrue : ifFalse)](/en-US/docs/Web/JavaScript/Reference/Operators/Conditional%5Foperator)\n\nThe conditional operator returns one of two values based on the logical value of the condition.\n\n### [Assignment operators](#assignment%5Foperators)\n\nAn assignment operator assigns a value to its left operand based on the value of its right operand.\n\n[\\=](/en-US/docs/Web/JavaScript/Reference/Operators/Assignment)\n\nAssignment operator.\n\n[\\*=](/en-US/docs/Web/JavaScript/Reference/Operators/Multiplication%5Fassignment)\n\nMultiplication assignment.\n\n[/=](/en-US/docs/Web/JavaScript/Reference/Operators/Division%5Fassignment)\n\nDivision assignment.\n\n[%=](/en-US/docs/Web/JavaScript/Reference/Operators/Remainder%5Fassignment)\n\nRemainder assignment.\n\n[+=](/en-US/docs/Web/JavaScript/Reference/Operators/Addition%5Fassignment)\n\nAddition assignment.\n\n[\\-=](/en-US/docs/Web/JavaScript/Reference/Operators/Subtraction%5Fassignment)\n\nSubtraction assignment\n\n[<<=](/en-US/docs/Web/JavaScript/Reference/Operators/Left%5Fshift%5Fassignment)\n\nLeft shift assignment.\n\n[\\>>=](/en-US/docs/Web/JavaScript/Reference/Operators/Right%5Fshift%5Fassignment)\n\nRight shift assignment.\n\n[\\>>>=](/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned%5Fright%5Fshift%5Fassignment)\n\nUnsigned right shift assignment.\n\n[&=](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FAND%5Fassignment)\n\nBitwise AND assignment.\n\n[^=](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FXOR%5Fassignment)\n\nBitwise XOR assignment.\n\n[|=](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FOR%5Fassignment)\n\nBitwise OR assignment.\n\n[\\*\\*=](/en-US/docs/Web/JavaScript/Reference/Operators/Exponentiation%5Fassignment)\n\nExponentiation assignment.\n\n[&&=](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FAND%5Fassignment)\n\nLogical AND assignment.\n\n[||=](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FOR%5Fassignment)\n\nLogical OR assignment.\n\n[??=](/en-US/docs/Web/JavaScript/Reference/Operators/Nullish%5Fcoalescing%5Fassignment)\n\nNullish coalescing assignment.\n\n[\\[a, b\\] = arr, { a, b } = obj](/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring%5Fassignment)\n\nDestructuring assignment allows you to assign the properties of an array or object to variables using syntax that looks similar to array or object literals.\n\n### [Yield operators](#yield%5Foperators)\n\n[yield](/en-US/docs/Web/JavaScript/Reference/Operators/yield)\n\nPause and resume a generator function.\n\n[yield\\*](/en-US/docs/Web/JavaScript/Reference/Operators/yield%2A)\n\nDelegate to another generator function or iterable object.\n\n### [Spread syntax](#spread%5Fsyntax)\n\n[...obj](/en-US/docs/Web/JavaScript/Reference/Operators/Spread%5Fsyntax)\n\nSpread syntax allows an iterable, such as an array or string, to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected. In an object literal, the spread syntax enumerates the properties of an object and adds the key-value pairs to the object being created.\n\n### [Comma operator](#comma%5Foperator)\n\n[,](/en-US/docs/Web/JavaScript/Reference/Operators/Comma%5Foperator)\n\nThe comma operator allows multiple expressions to be evaluated in a single statement and returns the result of the last expression.\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                                                                                                             |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-addition-operator-plus](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-addition-operator-plus)                                                                                     |\n| [ECMAScript Language Specification  \\# sec-assignment-operators](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-assignment-operators)                                                                                         |\n| [ECMAScript Language Specification  \\# sec-async-function-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-async-function-definitions)                                                                   |\n| [ECMAScript Language Specification  \\# sec-async-generator-function-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-async-generator-function-definitions)                                               |\n| [ECMAScript Language Specification  \\# prod-BitwiseANDExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-BitwiseANDExpression)                                                                                       |\n| [ECMAScript Language Specification  \\# sec-bitwise-not-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-bitwise-not-operator)                                                                                         |\n| [ECMAScript Language Specification  \\# prod-BitwiseORExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-BitwiseORExpression)                                                                                         |\n| [ECMAScript Language Specification  \\# prod-BitwiseXORExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-BitwiseXORExpression)                                                                                       |\n| [ECMAScript Language Specification  \\# sec-class-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-class-definitions)                                                                                     |\n| [ECMAScript Language Specification  \\# sec-comma-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-comma-operator)                                                                                                     |\n| [ECMAScript Language Specification  \\# sec-conditional-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-conditional-operator)                                                                                         |\n| [ECMAScript Language Specification  \\# sec-postfix-decrement-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-postfix-decrement-operator)                                                                             |\n| [ECMAScript Language Specification  \\# sec-delete-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-delete-operator)                                                                                                   |\n| [ECMAScript Language Specification  \\# sec-destructuring-assignment](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-destructuring-assignment)                                                                                 |\n| [ECMAScript Language Specification  \\# sec-destructuring-binding-patterns](https://tc39.es/ecma262/multipage/ecmascript-language-statements-and-declarations.html#sec-destructuring-binding-patterns)                                                     |\n| [ECMAScript Language Specification  \\# sec-multiplicative-operators](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-multiplicative-operators)                                                                                 |\n| [ECMAScript Language Specification  \\# sec-equality-operators](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-equality-operators)                                                                                             |\n| [ECMAScript Language Specification  \\# sec-exp-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-exp-operator)                                                                                                         |\n| [ECMAScript Language Specification  \\# sec-function-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-function-definitions)                                                                               |\n| [ECMAScript Language Specification  \\# sec-generator-function-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-generator-function-definitions)                                                           |\n| [ECMAScript Language Specification  \\# sec-relational-operators](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-relational-operators)                                                                                         |\n| [ECMAScript Language Specification  \\# sec-grouping-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-grouping-operator)                                                                                               |\n| [ECMAScript Language Specification  \\# sec-import-calls](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-import-calls)                                                                                                         |\n| [ECMAScript Language Specification  \\# prod-ImportMeta](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-ImportMeta)                                                                                                           |\n| [HTML Standard  \\# hostgetimportmetaproperties](https://html.spec.whatwg.org/multipage/webappapis.html#hostgetimportmetaproperties)                                                                                                                       |\n| [ECMAScript Language Specification  \\# sec-postfix-increment-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-postfix-increment-operator)                                                                             |\n| [ECMAScript Language Specification  \\# sec-left-shift-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-left-shift-operator)                                                                                           |\n| [ECMAScript Language Specification  \\# prod-LogicalANDExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-LogicalANDExpression)                                                                                       |\n| [ECMAScript Language Specification  \\# sec-logical-not-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-logical-not-operator)                                                                                         |\n| [ECMAScript Language Specification  \\# prod-LogicalORExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-LogicalORExpression)                                                                                         |\n| [ECMAScript Language Specification  \\# sec-new-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-new-operator)                                                                                                         |\n| [ECMAScript Language Specification  \\# sec-built-in-function-objects](https://tc39.es/ecma262/multipage/ordinary-and-exotic-objects-behaviours.html#sec-built-in-function-objects)                                                                        |\n| [ECMAScript Language Specification  \\# sec-null-value](https://tc39.es/ecma262/multipage/overview.html#sec-null-value)                                                                                                                                    |\n| [ECMAScript Language Specification  \\# prod-CoalesceExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-CoalesceExpression)                                                                                           |\n| [ECMAScript Language Specification  \\# sec-object-initializer](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-object-initializer)                                                                                             |\n| [ECMAScript Language Specification  \\# prod-OptionalExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-OptionalExpression)                                                                                           |\n| [ECMAScript Language Specification  \\# sec-property-accessors](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-property-accessors)                                                                                             |\n| [ECMAScript Language Specification  \\# sec-signed-right-shift-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-signed-right-shift-operator)                                                                           |\n| [ECMAScript Language Specification  \\# prod-SpreadElement](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-SpreadElement)                                                                                                     |\n| [ECMAScript Language Specification  \\# prod-ArgumentList](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-ArgumentList)                                                                                                       |\n| [ECMAScript Language Specification  \\# prod-PropertyDefinition](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-PropertyDefinition)                                                                                           |\n| [ECMAScript Language Specification  \\# sec-subtraction-operator-minus](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-subtraction-operator-minus)                                                                             |\n| [ECMAScript Language Specification  \\# sec-super-keyword](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-super-keyword)                                                                                                       |\n| [ECMAScript Language Specification  \\# sec-this-keyword](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-this-keyword)                                                                                                         |\n| [ECMAScript Language Specification  \\# sec-typeof-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-typeof-operator)                                                                                                   |\n| [ECMAScript Language Specification  \\# sec-unary-minus-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-unary-minus-operator)                                                                                         |\n| [ECMAScript Language Specification  \\# sec-unary-plus-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-unary-plus-operator)                                                                                           |\n| [ECMAScript Language Specification  \\# sec-unsigned-right-shift-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-unsigned-right-shift-operator)                                                                       |\n| [ECMAScript Language Specification  \\# sec-void-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-void-operator)                                                                                                       |\n| [ECMAScript Language Specification  \\# prod-YieldExpression](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#prod-YieldExpression)                                                                                       |\n| [ECMAScript Language Specification  \\# sec-generator-function-definitions-runtime-semantics-evaluation](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-generator-function-definitions-runtime-semantics-evaluation) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Operator precedence](/en-US/docs/Web/JavaScript/Reference/Operators/Operator%5Fprecedence)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fd85a7ba8cca98c2f6cf67a0c44f0ffd467532f20%0A%2A+Document+last+modified%3A+2023-04-05T04%3A57%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 5, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/contributors.txt)."}