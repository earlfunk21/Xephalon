{"lang":"Javascript","fullPath":"/Operators/Unsigned_right_shift","category":"Operators","title":"Unsigned_right_shift","url":"/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned_right_shift","markdown":"# Unsigned right shift (>>>)\n\nThe **unsigned right shift (`>>>`)** operator returns a number whose binary representation is the first operand shifted by the specified number of bits to the right. Excess bits shifted off to the right are discarded, and zero bits are shifted in from the left. This operation is also called \"zero-filling right shift\", because the sign bit becomes `0`, so the resulting number is always positive. Unsigned right shift does not accept [BigInt](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/BigInt) values.\n\n## [Try it](#try%5Fit)\n\n## [Syntax](#syntax)\n\n```\nx >>> y\n\n```\n\n## [Description](#description)\n\nUnlike other arithmetic and bitwise operators, the unsigned right shift operator does not accept [BigInt](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/BigInt) values. This is because it fills the leftmost bits with zeroes, but conceptually, BigInts have an infinite number of leading sign bits, so there's no \"leftmost bit\" to fill with zeroes.\n\nThe operator operates on the left operand's bit representation in [two's complement](https://en.wikipedia.org/wiki/Two's%5Fcomplement). Consider the 32-bit binary representations of the decimal (base 10) numbers `9` and `-9`:\n\n     9 (base 10): 00000000000000000000000000001001 (base 2)\n    -9 (base 10): 11111111111111111111111111110111 (base 2)\n\nThe binary representation under two's complement of the negative decimal (base 10) number `-9` is formed by inverting all the bits of its opposite number, which is `9` and `00000000000000000000000000001001` in binary, and adding `1`.\n\nIn both cases, the sign of the binary number is given by its leftmost bit: for the positive decimal number `9`, the leftmost bit of the binary representation is `0`, and for the negative decimal number `-9`, the leftmost bit of the binary representation is `1`.\n\nGiven those binary representations of the decimal (base 10) numbers `9`, and `-9`:\n\nFor the positive number `9`, zero-fill right shift and [sign-propagating right shift](/en-US/docs/Web/JavaScript/Reference/Operators/Right%5Fshift) yield the same result: `9 >>> 2` yields `2`, the same as `9 >> 2`:\n\n      9 (base 10): 00000000000000000000000000001001 (base 2)\n                   --------------------------------\n9 >>  2 (base 10): 00000000000000000000000000000010 (base 2) = 2 (base 10)\n9 >>> 2 (base 10): 00000000000000000000000000000010 (base 2) = 2 (base 10)\n\nNotice how two rightmost bits, `01`, have been shifted off, and two zeroes have been shifted in from the left.\n\nHowever, notice what happens for `-9`: `-9 >> 2` ([sign-propagating right shift](/en-US/docs/Web/JavaScript/Reference/Operators/Right%5Fshift)) yields `-3`, but `-9 >>> 2` (zero-fill right shift) yields 1073741821:\n\n      -9 (base 10): 11111111111111111111111111110111 (base 2)\n                    --------------------------------\n-9 >>  2 (base 10): 11111111111111111111111111111101 (base 2) = -3 (base 10)\n-9 >>> 2 (base 10): 00111111111111111111111111111101 (base 2) = 1073741821 (base 10)\n\nNotice how two rightmost bits, `11`, have been shifted off. For `-9 >> 2` ([sign-propagating right shift](/en-US/docs/Web/JavaScript/Reference/Operators/Right%5Fshift)), two copies of the leftmost `1` bit have been shifted in from the left, which preserves the negative sign. On the other hand, for `-9 >>> 2` (zero-fill right shift), zeroes have instead been shifted in from the left, so the negative sign of the number is not preserved, and the result is instead a (large) positive number.\n\nIf the left operand is a number with more than 32 bits, it will get the most significant bits discarded. For example, the following integer with more than 32 bits will be converted to a 32-bit integer:\n\nBefore: 11100110111110100000000000000110000000000001\nAfter:              10100000000000000110000000000001\n\nThe right operand will be converted to an unsigned 32-bit integer and then taken modulo 32, so the actual shift offset will always be a positive integer between 0 and 31, inclusive. For example, `100 >>> 32` is the same as `100 >>> 0` (and produces `100`) because 32 modulo 32 is 0.\n\n## [Examples](#examples)\n\n### [Using unsigned right shift](#using%5Funsigned%5Fright%5Fshift)\n\n```\n9 >>> 2; // 2\n-9 >>> 2; // 1073741821\n\n```\n\nUnsigned right shift doesn't work with BigInts.\n\n```\n9n >>> 2n; // TypeError: BigInts have no unsigned right shift, use >> instead\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                                       |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-unsigned-right-shift-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-unsigned-right-shift-operator) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Bitwise operators in the JS guide](/en-US/docs/Web/JavaScript/Guide/Expressions%5Fand%5Foperators#bitwise%5Foperators)\n* [Unsigned right shift assignment operator](/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned%5Fright%5Fshift%5Fassignment)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/unsigned%5Fright%5Fshift/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FUnsigned%5Fright%5Fshift&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Funsigned%5Fright%5Fshift%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FUnsigned%5Fright%5Fshift%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Funsigned%5Fright%5Fshift%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fd85a7ba8cca98c2f6cf67a0c44f0ffd467532f20%0A%2A+Document+last+modified%3A+2023-04-05T04%3A57%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/unsigned%5Fright%5Fshift/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators/unsigned_right_shift (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 5, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/Unsigned%5Fright%5Fshift/contributors.txt)."}