{"lang":"Javascript","fullPath":"/Operators/Bitwise_OR","category":"Operators","title":"Bitwise_OR","url":"/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_OR","markdown":"# Bitwise OR (|)\n\nThe **bitwise OR (`|`)** operator returns a number or BigInt whose binary representation has a `1` in each bit position for which the corresponding bits of either or both operands are `1`.\n\n## [Try it](#try%5Fit)\n\n## [Syntax](#syntax)\n\n```\nx | y\n\n```\n\n## [Description](#description)\n\nThe `|` operator is overloaded for two types of operands: number and [BigInt](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/BigInt). For numbers, the operator returns a 32-bit integer. For BigInts, the operator returns a BigInt. It first [coerces both operands to numeric values](/en-US/docs/Web/JavaScript/Data%5Fstructures#numeric%5Fcoercion) and tests the types of them. It performs BigInt OR if both operands becomes BigInts; otherwise, it converts both operands to [32-bit integers](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Number#fixed-width%5Fnumber%5Fconversion) and performs number bitwise OR. A [TypeError](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/TypeError) is thrown if one operand becomes a BigInt but the other becomes a number.\n\nThe operator operates on the operands' bit representations in [two's complement](https://en.wikipedia.org/wiki/Two's%5Fcomplement). Each bit in the first operand is paired with the corresponding bit in the second operand: _first bit_ to _first bit_, _second bit_ to _second bit_, and so on. The operator is applied to each pair of bits, and the result is constructed bitwise.\n\nThe truth table for the OR operation is:\n\n| x | y | x OR y |\n| - | - | ------ |\n| 0 | 0 | 0      |\n| 0 | 1 | 1      |\n| 1 | 0 | 1      |\n| 1 | 1 | 1      |\n\n     9 (base 10) = 00000000000000000000000000001001 (base 2)\n    14 (base 10) = 00000000000000000000000000001110 (base 2)\n                   --------------------------------\n14 | 9 (base 10) = 00000000000000000000000000001111 (base 2) = 15 (base 10)\n\nNumbers with more than 32 bits get their most significant bits discarded. For example, the following integer with more than 32 bits will be converted to a 32-bit integer:\n\nBefore: 11100110111110100000000000000110000000000001\nAfter:              10100000000000000110000000000001\n\nFor BigInts, there's no truncation. Conceptually, understand positive BigInts as having an infinite number of leading `0` bits, and negative BigInts having an infinite number of leading `1` bits.\n\nBitwise ORing any number `x` with `0` returns `x` converted to a 32-bit integer. Do not use `| 0` to truncate numbers to integers; use [Math.trunc()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Math/trunc#using%5Fbitwise%5Fno-ops%5Fto%5Ftruncate%5Fnumbers) instead.\n\n## [Examples](#examples)\n\n### [Using bitwise OR](#using%5Fbitwise%5For)\n\n```\n// 9  (00000000000000000000000000001001)\n// 14 (00000000000000000000000000001110)\n\n14 | 9;\n// 15 (00000000000000000000000000001111)\n\n14n | 9n; // 15n\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                     |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# prod-BitwiseORExpression](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-BitwiseORExpression) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Bitwise operators in the JS guide](/en-US/docs/Web/JavaScript/Guide/Expressions%5Fand%5Foperators#bitwise%5Foperators)\n* [Bitwise OR assignment operator](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FOR%5Fassignment)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/bitwise%5For/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FBitwise%5FOR&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Fbitwise%5For%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FBitwise%5FOR%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Fbitwise%5For%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fd85a7ba8cca98c2f6cf67a0c44f0ffd467532f20%0A%2A+Document+last+modified%3A+2023-04-05T04%3A57%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/bitwise%5For/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators/bitwise_or (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 5, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FOR/contributors.txt)."}