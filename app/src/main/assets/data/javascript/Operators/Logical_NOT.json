{"lang":"Javascript","fullPath":"/Operators/Logical_NOT","category":"Operators","title":"Logical_NOT","url":"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_NOT","markdown":"# Logical NOT (!)\n\n The **logical NOT (`!`)** (logical complement, negation) operator takes truth to falsity and vice versa. It is typically used with boolean (logical) values. When used with non-Boolean values, it returns `false` if its single operand can be converted to `true`; otherwise, returns `true`.\n\n## [Try it](#try%5Fit)\n\n## [Syntax](#syntax)\n\n```\n!x\n\n```\n\n## [Description](#description)\n\n Returns `false` if its single operand can be converted to `true`; otherwise, returns `true`.\n\n If a value can be converted to `true`, the value is so-called[truthy](/en-US/docs/Glossary/Truthy). If a value can be converted to `false`, the value is so-called [falsy](/en-US/docs/Glossary/Falsy).\n\nExamples of expressions that can be converted to false are:\n\n* `null`;\n* `NaN`;\n* `0`;\n* empty string (`\"\"` or `''` or ``` `` ```);\n* `undefined`.\n\nEven though the `!` operator can be used with operands that are not Boolean values, it can still be considered a boolean operator since its return value can always be converted to a [boolean primitive](/en-US/docs/Web/JavaScript/Data%5Fstructures#boolean%5Ftype). To explicitly convert its return value (or any expression in general) to the corresponding boolean value, use a double NOT operator (`!!`) or the [Boolean](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Boolean/Boolean) constructor.\n\n## [Examples](#examples)\n\n### [Using NOT](#using%5Fnot)\n\nThe following code shows examples of the `!` (logical NOT) operator.\n\n```\n!true; // !t returns false\n!false; // !f returns true\n!\"\"; // !f returns true\n!\"Cat\"; // !t returns false\n\n```\n\n### [Double NOT (!!)](#double%5Fnot%5F!!)\n\n It is possible to use a couple of NOT operators in series to explicitly force the conversion of any value to the corresponding [boolean primitive](/en-US/docs/Web/JavaScript/Data%5Fstructures#boolean%5Ftype). The conversion is based on the \"truthyness\" or \"falsyness\" of the value (see[truthy](/en-US/docs/Glossary/Truthy) and [falsy](/en-US/docs/Glossary/Falsy)).\n\nThe same conversion can be done through the [Boolean](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Boolean/Boolean) function.\n\n```\n!!true; // !!truthy returns true\n!!{}; // !!truthy returns true: any object is truthy...\n!!new Boolean(false); // ...even Boolean objects with a false .valueOf()!\n!!false; // !!falsy returns false\n!!\"\"; // !!falsy returns false\n!!Boolean(false); // !!falsy returns false\n\n```\n\n### [Converting between NOTs](#converting%5Fbetween%5Fnots)\n\nThe following operation involving **booleans**:\n\n```\n!!bCondition\n\n```\n\nis always equal to:\n\n```\nbCondition\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                     |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-logical-not-operator](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-logical-not-operator) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Boolean](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Boolean)\n* [Truthy](/en-US/docs/Glossary/Truthy)\n* [Falsy](/en-US/docs/Glossary/Falsy)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/logical%5Fnot/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FLogical%5FNOT&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Flogical%5Fnot%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FLogical%5FNOT%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Flogical%5Fnot%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F93d2d79c1c68af93f2730d27cdea9d527eee0d7a%0A%2A+Document+last+modified%3A+2023-03-28T05%3A38%3A31.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/logical%5Fnot/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators/logical_not (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Mar 28, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FNOT/contributors.txt)."}