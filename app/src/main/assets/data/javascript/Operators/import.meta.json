{"lang":"Javascript","fullPath":"/Operators/import.meta","category":"Operators","title":"import.meta","url":"/en-US/docs/Web/JavaScript/Reference/Operators/import.meta","markdown":"# import.meta\n\nThe **`import.meta`** meta-property exposes context-specific metadata to a JavaScript module. It contains information about the module, such as the module's URL.\n\n## [Syntax](#syntax)\n\n```\nimport.meta\n\n```\n\n### [Value](#value)\n\nThe `import.meta` object is created by the host environment, as an extensible [null\\-prototype](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/Object#null-prototype%5Fobjects) object where all properties are writable, configurable, and enumerable. The spec doesn't specify any properties to be defined on it, but hosts usually implement the following properties:\n\n`url`\n\nThe full URL to the module, includes query parameters and/or hash (following the `?` or `#`). In browsers, this is either the URL from which the script was obtained (for external scripts), or the URL of the containing document (for inline scripts). In Node.js, this is the file path (including the `file://` protocol).\n\n[resolve](/en-US/docs/Web/JavaScript/Reference/Operators/import.meta/resolve)\n\nResolves a module specifier to a URL using the current module's URL as base.\n\n## [Description](#description)\n\nThe `import.meta` syntax consists of the keyword `import`, a dot, and the identifier `meta`. Because `import` is a [reserved word](/en-US/docs/Web/JavaScript/Reference/Lexical%5Fgrammar#reserved%5Fwords), not an identifier, this is not a [property accessor](/en-US/docs/Web/JavaScript/Reference/Operators/Property%5Faccessors), but a special expression syntax.\n\nThe `import.meta` meta-property is available in JavaScript modules; using `import.meta` outside of a module (including [direct eval()](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/eval#direct%5Fand%5Findirect%5Feval) within a module) is a syntax error.\n\n## [Examples](#examples)\n\n### [Passing query parameters](#passing%5Fquery%5Fparameters)\n\nUsing query parameters in the `import` specifier allows module-specific argument passing, which may be complementary to reading parameters from the application-wide [window.location](/en-US/docs/Web/API/Window/location) (or on Node.js, through `process.argv`). For example, with the following HTML:\n\n```\n<script type=\"module\">\n  import \"./index.mjs?someURLInfo=5\";\n</script>\n\n```\n\nThe `index.mjs` module is able to retrieve the `someURLInfo` parameter through `import.meta`:\n\n```\n// index.mjs\nnew URL(import.meta.url).searchParams.get(\"someURLInfo\"); // 5\n\n```\n\nThe same applies when a module imports another:\n\n```\n// index.mjs\nimport \"./index2.mjs?someURLInfo=5\";\n\n// index2.mjs\nnew URL(import.meta.url).searchParams.get(\"someURLInfo\"); // 5\n\n```\n\nThe ES module implementation in Node.js supports resolving module specifiers containing query parameters (or the hash), as in the latter example. However, you cannot use queries or hashes when the module is specified through the CLI command (like `node index.mjs?someURLInfo=5`), because the CLI entrypoint uses a more CommonJS-like resolution mode, treating the path as a file path rather than a URL. To pass parameters to the entrypoint module, use CLI arguments and read them through `process.argv` instead (like `node index.mjs --someURLInfo=5`).\n\n### [Getting current module's file path](#getting%5Fcurrent%5Fmodules%5Ffile%5Fpath)\n\nIn Node.js CommonJS modules, there's a `__dirname` variable that contains the absolute path to the folder containing current module, which is useful for resolving relative paths. However, ES modules cannot have contextual variables except for `import.meta`. Therefore, to get the current module's file path, you can use `import.meta.url`.\n\nBefore (CommonJS):\n\n```\nconst fs = require(\"fs/promises\");\nconst path = require(\"path\");\n\nconst filePath = path.join(__dirname, \"someFile.txt\");\nfs.readFile(filePath, \"utf8\").then(console.log);\n\n```\n\nAfter (ES modules):\n\n```\nimport fs from \"node:fs/promises\";\nimport { fileURLToPath } from \"node:url\";\n\nconst filePath = fileURLToPath(new URL(\"./someFile.txt\", import.meta.url));\nfs.readFile(filePath, \"utf8\").then(console.log);\n\n```\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                   |\n| ----------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# prod-ImportMeta](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#prod-ImportMeta) |\n| [HTML Standard  \\# hostgetimportmetaproperties](https://html.spec.whatwg.org/multipage/webappapis.html#hostgetimportmetaproperties)             |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [import](/en-US/docs/Web/JavaScript/Reference/Statements/import)\n* [export](/en-US/docs/Web/JavaScript/Reference/Statements/export)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/import.meta/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2Fimport.meta&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Fimport.meta%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2Fimport.meta%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Fimport.meta%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fd85a7ba8cca98c2f6cf67a0c44f0ffd467532f20%0A%2A+Document+last+modified%3A+2023-04-05T04%3A57%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/import.meta/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators/import.meta (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 5, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/import.meta/contributors.txt)."}