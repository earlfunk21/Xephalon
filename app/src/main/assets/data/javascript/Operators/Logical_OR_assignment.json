{"lang":"Javascript","fullPath":"/Operators/Logical_OR_assignment","category":"Operators","title":"Logical_OR_assignment","url":"/en-US/docs/Web/JavaScript/Reference/Operators/Logical_OR_assignment","markdown":"# Logical OR assignment (||=)\n\nThe **logical OR assignment (`x ||= y`)** operator only assigns if `x` is [falsy](/en-US/docs/Glossary/Falsy).\n\n## [Try it](#try%5Fit)\n\n## [Syntax](#syntax)\n\n```\nx ||= y\n\n```\n\n## [Description](#description)\n\nLogical OR assignment [_short-circuits_](/en-US/docs/Web/JavaScript/Reference/Operators/Operator%5Fprecedence#short-circuiting), meaning that `x ||= y` is equivalent to:\n\n```\nx || (x = y);\n\n```\n\nNo assignment is performed if the left-hand side is not falsy, due to short-circuiting of the [logical OR](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FOR) operator. For example, the following does not throw an error, despite `x` being `const`:\n\n```\nconst x = 1;\nx ||= 2;\n\n```\n\nNeither would the following trigger the setter:\n\n```\nconst x = {\n  get value() {\n    return 1;\n  },\n  set value(v) {\n    console.log(\"Setter called\");\n  },\n};\n\nx.value ||= 2;\n\n```\n\nIn fact, if `x` is truthy, `y` is not evaluated at all.\n\n```\nconst x = 1;\nx ||= console.log(\"y evaluated\");\n// Logs nothing\n\n```\n\n## [Examples](#examples)\n\n### [Setting default content](#setting%5Fdefault%5Fcontent)\n\nIf the \"lyrics\" element is empty, display a default value:\n\n```\ndocument.getElementById(\"lyrics\").textContent ||= \"No lyrics.\";\n\n```\n\nHere the short-circuit is especially beneficial, since the element will not be updated unnecessarily and won't cause unwanted side-effects such as additional parsing or rendering work, or loss of focus, etc.\n\n Note: Pay attention to the value returned by the API you're checking against. If an empty string is returned (a [falsy](/en-US/docs/Glossary/Falsy) value), `||=` must be used, so that \"No lyrics.\" is displayed instead of a blank space. However, if the API returns [null](/en-US/docs/Web/JavaScript/Reference/Operators/null) or[undefined](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/undefined) in case of blank content, [??=](/en-US/docs/Web/JavaScript/Reference/Operators/Nullish%5Fcoalescing%5Fassignment) should be used instead.\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                     |\n| ----------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-assignment-operators](https://tc39.es/ecma262/multipage/ecmascript-language-expressions.html#sec-assignment-operators) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [Logical OR (||)](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FOR)\n* [The nullish coalescing operator (??)](/en-US/docs/Web/JavaScript/Reference/Operators/Nullish%5Fcoalescing)\n* [Bitwise OR assignment (|=)](/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise%5FOR%5Fassignment)\n* [Truthy](/en-US/docs/Glossary/Truthy)\n* [Falsy](/en-US/docs/Glossary/Falsy)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/operators/logical%5For%5Fassignment/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FLogical%5FOR%5Fassignment&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Flogical%5For%5Fassignment%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FOperators%2FLogical%5FOR%5Fassignment%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Foperators%2Flogical%5For%5Fassignment%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2Fd85a7ba8cca98c2f6cf67a0c44f0ffd467532f20%0A%2A+Document+last+modified%3A+2023-04-05T04%3A57%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/logical%5For%5Fassignment/index.md?plain=1 \"Folder: en-us/web/javascript/reference/operators/logical_or_assignment (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Apr 5, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Operators/Logical%5FOR%5Fassignment/contributors.txt)."}