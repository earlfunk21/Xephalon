{"lang":"Javascript","fullPath":"/Statements/class","category":"Statements","title":"class","url":"/en-US/docs/Web/JavaScript/Reference/Statements/class","markdown":"# class\n\n The **`class`** declaration creates a new class with a given name using prototype-based inheritance.\n\nYou can also define a class using a [class expression](/en-US/docs/Web/JavaScript/Reference/Operators/class), which allows redeclarations and omitting class names. Attempting to place **class declaration** in the same scope, under the same name, will throw a [SyntaxError](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/SyntaxError).\n\n## [Try it](#try%5Fit)\n\n## [Syntax](#syntax)\n\n```\nclass name [extends otherName] {\n  // class body\n}\n\n```\n\n## [Description](#description)\n\n The class body of a class declaration is executed in [strict mode](/en-US/docs/Web/JavaScript/Reference/Strict%5Fmode). The`constructor` method is optional.\n\n Class declarations behave like [let](/en-US/docs/Web/JavaScript/Reference/Statements/let) and [const](/en-US/docs/Web/JavaScript/Reference/Statements/const) and are not [hoisted](/en-US/docs/Glossary/Hoisting) (unlike [function declarations](/en-US/docs/Web/JavaScript/Reference/Statements/function)).\n\n## [Examples](#examples)\n\n### [A simple class declaration](#a%5Fsimple%5Fclass%5Fdeclaration)\n\n In the following example, we first define a class named `Rectangle`, then extend it to create a class named `FilledRectangle`.\n\n Note that `super()`, used in the `constructor`, can only be used in constructors, and _must_ be called _before_ the `this` keyword can be used.\n\n```\nclass Rectangle {\n  constructor(height, width) {\n    this.name = \"Rectangle\";\n    this.height = height;\n    this.width = width;\n  }\n}\n\nclass FilledRectangle extends Rectangle {\n  constructor(height, width, color) {\n    super(height, width);\n    this.name = \"Filled rectangle\";\n    this.color = color;\n  }\n}\n\n```\n\n### [Attempting to declare a class twice](#attempting%5Fto%5Fdeclare%5Fa%5Fclass%5Ftwice)\n\nRe-declaring a class using the class declaration throws a [SyntaxError](/en-US/docs/Web/JavaScript/Reference/Global%5FObjects/SyntaxError).\n\n```\nclass Foo {}\nclass Foo {} // Uncaught SyntaxError: Identifier 'Foo' has already been declared\n\n```\n\n The same error is thrown when a class has been defined before using the class expression.\n\n```\nlet Foo = class {};\nclass Foo {} // Uncaught SyntaxError: Identifier 'Foo' has already been declared\n\n```\n\nIf you're experimenting in a REPL, such as the Firefox web console (**Tools** \\> **Web Developer** \\> **Web Console**), and you run two class declarations with the same name in two separate inputs, you may get the same re-declaration error. See further discussion of this issue in [Firefox bug 1580891](https://bugzil.la/1580891). The Chrome console allows class re-declarations between different REPL inputs.\n\n## [Specifications](#specifications)\n\n| Specification                                                                                                                                                         |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [ECMAScript Language Specification  \\# sec-class-definitions](https://tc39.es/ecma262/multipage/ecmascript-language-functions-and-classes.html#sec-class-definitions) |\n\n## [Browser compatibility](#browser%5Fcompatibility)\n\nBCD tables only load in the browser\n\n## [See also](#see%5Falso)\n\n* [function declaration](/en-US/docs/Web/JavaScript/Reference/Statements/function)\n* [class expression](/en-US/docs/Web/JavaScript/Reference/Operators/class)\n* [Classes](/en-US/docs/Web/JavaScript/Reference/Classes)\n\n### Found a content problem with this page?\n\n* [Edit the page on GitHub](https://github.com/mdn/content/edit/main/files/en-us/web/javascript/reference/statements/class/index.md \"This will take you to GitHub, where you'll need to sign in first.\").\n* [Report the content issue](https://github.com/mdn/content/issues/new?template=page-report.yml&mdn-url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FStatements%2Fclass&metadata=%3C%21--+Do+not+make+changes+below+this+line+--%3E%0A%3Cdetails%3E%0A%3Csummary%3EPage+report+details%3C%2Fsummary%3E%0A%0A%2A+Folder%3A+%60en-us%2Fweb%2Fjavascript%2Freference%2Fstatements%2Fclass%60%0A%2A+MDN+URL%3A+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FReference%2FStatements%2Fclass%0A%2A+GitHub+URL%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fblob%2Fmain%2Ffiles%2Fen-us%2Fweb%2Fjavascript%2Freference%2Fstatements%2Fclass%2Findex.md%0A%2A+Last+commit%3A+https%3A%2F%2Fgithub.com%2Fmdn%2Fcontent%2Fcommit%2F77176b1f35f73f319bb5b959e5c90db8b5a0f9ea%0A%2A+Document+last+modified%3A+2023-03-28T20%3A42%3A48.000Z%0A%0A%3C%2Fdetails%3E \"This will take you to GitHub to file a new issue.\").\n* [View the source on GitHub](https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/statements/class/index.md?plain=1 \"Folder: en-us/web/javascript/reference/statements/class (Opens in a new tab)\").\nWant to get more involved? [Learn how to contribute](https://github.com/mdn/content/blob/main/CONTRIBUTING.md \"This will take you to our contribution guidelines on GitHub.\").\n\nThis page was last modified on Mar 28, 2023 by [MDN contributors](/en-US/docs/Web/JavaScript/Reference/Statements/class/contributors.txt)."}