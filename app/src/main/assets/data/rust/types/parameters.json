{"lang":"Rust","fullPath":"/types/parameters","category":"types","title":"parameters","url":"https://doc.rust-lang.org/stable/reference/types/parameters.html","markdown":"# [Type parameters](#type-parameters)\n\nWithin the body of an item that has type parameter declarations, the names of its type parameters are types:\n\n```rust\n#![allow(unused)]\nfn main() {\nfn to_vec<A: Clone>(xs: &[A]) -> Vec<A> {\n    if xs.is_empty() {\n        return vec![];\n    }\n    let first: A = xs[0].clone();\n    let mut rest: Vec<A> = to_vec(&xs[1..]);\n    rest.insert(0, first);\n    rest\n}\n}\n```\n\nHere, `first` has type `A`, referring to `to_vec`'s `A` type parameter; and`rest` has type `Vec<A>`, a vector with element type `A`.\n\n[ ](../types/impl-trait.html \"Previous chapter\") [ ](../types/inferred.html \"Next chapter\") "}