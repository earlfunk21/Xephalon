{"lang":"Rust","fullPath":"/types/enum","category":"types","title":"enum","url":"https://doc.rust-lang.org/stable/reference/types/enum.html","markdown":"# [Enumerated types](#enumerated-types)\n\nAn _enumerated type_ is a nominal, heterogeneous disjoint union type, denoted by the name of an [enum item](../items/enumerations.html). [1](#enumtype)\n\nAn [enum item](../items/enumerations.html) declares both the type and a number of _variants_, each of which is independently named and has the syntax of a struct, tuple struct or unit-like struct.\n\nNew instances of an `enum` can be constructed with a [struct expression](../expressions/struct-expr.html).\n\nAny `enum` value consumes as much memory as the largest variant for its corresponding `enum` type, as well as the size needed to store a discriminant.\n\nEnum types cannot be denoted _structurally_ as types, but must be denoted by named reference to an [enum item](../items/enumerations.html).\n\n1 \n\nThe `enum` type is analogous to a `data` constructor declaration in ML, or a _pick ADT_ in Limbo.\n\n[ ](../types/struct.html \"Previous chapter\") [ ](../types/union.html \"Next chapter\") "}