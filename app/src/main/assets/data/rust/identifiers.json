{"lang":"Rust","fullPath":"/identifiers","category":"","title":"identifiers.html","url":"https://doc.rust-lang.org/stable/reference/identifiers.html","markdown":"# [Identifiers](#identifiers)\n\n> **Lexer:**  \n> IDENTIFIER\\_OR\\_KEYWORD :  \n> XID\\_Start XID\\_Continue\\*  \n> | `_` XID\\_Continue+\n> \n> RAW\\_IDENTIFIER : `r#` IDENTIFIER\\_OR\\_KEYWORD _Except `crate`, `self`, `super`, `Self`_\n> \n> NON\\_KEYWORD\\_IDENTIFIER : IDENTIFIER\\_OR\\_KEYWORD _Except a [strict](keywords.html#strict-keywords) or [reserved](keywords.html#reserved-keywords) keyword_\n> \n> IDENTIFIER :  \n> NON\\_KEYWORD\\_IDENTIFIER | RAW\\_IDENTIFIER\n\nIdentifiers follow the specification in [Unicode Standard Annex #31](https://www.unicode.org/reports/tr31/tr31-37.html) for Unicode version 15.0, with the additions described below. Some examples of identifiers:\n\n* `foo`\n* `_identifier`\n* `r#true`\n* `Москва`\n* `東京`\n\nThe profile used from UAX #31 is:\n\n* Start := [XID\\_Start](http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID%5FStart%3A%5D&abb=on&g=&i=), plus the underscore character (U+005F)\n* Continue := [XID\\_Continue](http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID%5FContinue%3A%5D&abb=on&g=&i=)\n* Medial := empty\n\nwith the additional constraint that a single underscore character is not an identifier.\n\n> **Note**: Identifiers starting with an underscore are typically used to indicate an identifier that is intentionally unused, and will silence the unused warning in `rustc`.\n\nIdentifiers may not be a [strict](keywords.html#strict-keywords) or [reserved](keywords.html#reserved-keywords) keyword without the `r#` prefix described below in [raw identifiers](#raw-identifiers).\n\nZero width non-joiner (ZWNJ U+200C) and zero width joiner (ZWJ U+200D) characters are not allowed in identifiers.\n\nIdentifiers are restricted to the ASCII subset of [XID\\_Start](http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID%5FStart%3A%5D&abb=on&g=&i=) and [XID\\_Continue](http://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AXID%5FContinue%3A%5D&abb=on&g=&i=) in the following situations:\n\n* [extern crate](items/extern-crates.html) declarations\n* External crate names referenced in a [path](paths.html)\n* [Module](items/modules.html) names loaded from the filesystem without a [path attribute](items/modules.html#the-path-attribute)\n* [no\\_mangle](abi.html#the-no%5Fmangle-attribute) attributed items\n* Item names in [external blocks](items/external-blocks.html)\n\n## [Normalization](#normalization)\n\nIdentifiers are normalized using Normalization Form C (NFC) as defined in [Unicode Standard Annex #15](https://www.unicode.org/reports/tr15/tr15-53.html). Two identifiers are equal if their NFC forms are equal.\n\n[Procedural](procedural-macros.html) and [declarative](macros-by-example.html) macros receive normalized identifiers in their input.\n\n## [Raw identifiers](#raw-identifiers)\n\nA raw identifier is like a normal identifier, but prefixed by `r#`. (Note that the `r#` prefix is not included as part of the actual identifier.) Unlike a normal identifier, a raw identifier may be any strict or reserved keyword except the ones listed above for `RAW_IDENTIFIER`.\n\n[ ](keywords.html \"Previous chapter\") [ ](comments.html \"Next chapter\") "}